* Cluster = Group of multiple ec2 instance is known as a cluster

* Kubernetes have two nodes : 1] master node
			      2] worker node

* Master node = 4 gb ram, 1 gb cpu, t3.small, kubeadm, kubectl, kubelet
* worker node = 1 gb ram, 1 gb cpu, t2.micro, kubeadm, kubectl, kubelet

* Component of Kubernetes:

1] kubeadm (kubeadmin) = Manage control plane of Kubernetes cluster
2] kubectl (kubecontroller) = Command line tool to interact with a Kubernetes cluster
3] kubelet (kube-node-agent) = Agent running on each worker node to maintain & run pods

* Kubelet = Creates a pods but in that containers are created by docker

* Network plugin : 1] calico
		               2] flannel

* Installation :

* Launch an ec2 instance whose name is master node
* Launch one more ec2 instance whose name is worker node
* Install docker on both side (sudo apt-get install -y docker.io)

* Run on both nodes

	1] sudo apt-get update –y
	2] sudo apt-get install docker.io –y
	3] sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
	4] sudo mkdir -p /etc/apt/keyrings
	5] curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o 	/etc/apt/keyrings/kubernetes-apt-keyring.gpg
	6] sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
	7] echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] 	https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
	8] sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
	9] sudo apt-get update
	10] sudo apt-get install -y kubectl kubeadm kubelet

* On Master Node :

	1] sudo kubeadm init --ignore-preflight-errors=all
	2] mkdir -p $HOME/.kube
	3] sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	4] sudo chown $(id -u):$(id -g) $HOME/.kube/config
	5] kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.0/manifests/calico.yaml
	6] kubeadm token create --print-join-command
 
	[add port 6443 in both master and worker node]

* On Worker Node :

	1] Use kubeadm join command with token (copy the token from master and paste on worker)

* On Master Node :

	1] kubectl get nodes
